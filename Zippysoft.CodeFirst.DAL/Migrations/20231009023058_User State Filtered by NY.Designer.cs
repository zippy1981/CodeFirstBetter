// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zippysoft.CodeFirst.DAL;

#nullable disable

namespace Zippysoft.CodeFirst.DAL.Migrations
{
    [DbContext(typeof(BetterDbContext))]
    [Migration("20231009023058_User State Filtered by NY")]
    partial class UserStateFilteredbyNY
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zippysoft.CodeFirst.DAL.Models.Aduser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR");

                    b.Property<string>("AlternateEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTimeOffset?>("EmployeeHireDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("CHAR");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("CHAR");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "State" }, "IX_Users_State_NY")
                        .HasFilter("[State] = 'NY'");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex(new[] { "State" }, "IX_Users_State_NY"), new[] { "Id", "DisplayName" });

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
